events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Enhanced logging format with cache status
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'cache_status:$upstream_cache_status '
                   'response_time:$request_time '
                   'upstream_time:$upstream_response_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression for better CDN performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # Rate limiting for API protection
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

    # Upstream servers for load balancing
    upstream app_servers {
        least_conn;  # Load balancing method
        server app1:3000 max_fails=3 fail_timeout=30s;
        server app2:3000 max_fails=3 fail_timeout=30s;
        server app3:3000 max_fails=3 fail_timeout=30s;
        
        # Health check configuration
        keepalive 32;
    }

    # CDN upstream for static assets
    upstream cdn_servers {
        server cdn:80;
        keepalive 16;
    }

    # Cache settings for static content
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m 
                     max_size=100m inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m 
                     max_size=50m inactive=30m use_temp_path=off;

    # Main server configuration
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Static assets served from CDN with aggressive caching
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            limit_req zone=static burst=20 nodelay;
            
            # Route to CDN
            proxy_pass http://cdn_servers;
            proxy_cache static_cache;
            proxy_cache_valid 200 304 1h;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache $http_pragma $http_authorization;
            
            # CDN headers
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status $upstream_cache_status;
            
            # Handle CDN failures gracefully
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Static content fallback (if CDN fails)
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1d;
            add_header Cache-Control "public";
            
            # Serve from local if CDN is down
            try_files $uri $uri/ =404;
        }

        # API endpoints with caching for safe requests
        location /api/ {
            limit_req zone=api burst=5 nodelay;
            
            # Cache GET requests only
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            # Don't cache authenticated requests
            proxy_cache_bypass $http_authorization;
            proxy_no_cache $http_authorization;
            
            # Add cache status header
            add_header X-Cache-Status $upstream_cache_status;
            
            # Proxy to app servers
            proxy_pass http://app_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            
            # Health check and failover
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        }

        # Health check endpoint (no caching)
        location /health {
            proxy_pass http://app_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # No caching for health checks
            proxy_cache off;
            add_header X-Cache-Status "BYPASS";
            
            access_log off;
        }

        # Instance info endpoint for load balancing verification
        location /api/instance {
            proxy_pass http://app_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Short cache for instance info
            proxy_cache api_cache;
            proxy_cache_valid 200 30s;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # File uploads (no caching)
        location /api/upload {
            client_max_body_size 10M;
            proxy_pass http://app_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # No caching for uploads
            proxy_cache off;
            
            # Extended timeouts for uploads
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Root path - serve main application
        location / {
            proxy_pass http://app_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Light caching for HTML pages
            proxy_cache api_cache;
            proxy_cache_valid 200 2m;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
            
            # Standard timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # NGINX Status and Metrics
    server {
        listen 8080;
        server_name localhost;

        # NGINX status page
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Cache status endpoint
        location /cache_status {
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            default_type application/json;
            return 200 '{"cache_enabled": true, "cache_zones": ["static_cache", "api_cache"]}';
        }

        # Prometheus metrics endpoint
        location /metrics {
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            # This would integrate with nginx-prometheus-exporter
            proxy_pass http://127.0.0.1:9113/metrics;
        }
    }
}