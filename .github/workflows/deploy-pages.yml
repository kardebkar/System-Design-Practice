name: Deploy Dashboard to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'performance-dashboard.html'
      - '.github/workflows/deploy-pages.yml'
      - 'README.md'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Create GitHub Pages site
      run: |
        # Create a docs directory for GitHub Pages
        mkdir -p docs
        
        # Copy main dashboard
        cp performance-dashboard.html docs/index.html
        
        # Create additional pages
        cp README.md docs/README.md
        
        # Create a simple index page with navigation
        cat > docs/dashboard.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>MiniGram Dashboard - Redirect</title>
            <meta http-equiv="refresh" content="0; url=index.html">
        </head>
        <body>
            <p>Redirecting to <a href="index.html">Performance Dashboard</a>...</p>
        </body>
        </html>
        EOF
        
        # Update dashboard with live GitHub API integration
        node -e "
        const fs = require('fs');
        let html = fs.readFileSync('docs/index.html', 'utf8');
        
        // Add GitHub repository information
        const repo = process.env.GITHUB_REPOSITORY;
        const runId = process.env.GITHUB_RUN_ID;
        
        // Replace placeholders with actual values
        html = html.replace(/kardebkar\/System-Design-Practice/g, repo);
        html = html.replace('https://github.com/kardebkar/System-Design-Practice/actions', 
                           \`https://github.com/\${repo}/actions\`);
        
        // Add live data integration
        const apiScript = \`
        <script>
          // GitHub API integration
          const GITHUB_REPO = '\${repo}';
          const GITHUB_API_BASE = 'https://api.github.com/repos/' + GITHUB_REPO;
          
          // Function to fetch latest workflow runs
          async function fetchLatestRuns() {
            try {
              const response = await fetch(GITHUB_API_BASE + '/actions/runs?per_page=5');
              const data = await response.json();
              return data.workflow_runs;
            } catch (error) {
              console.error('Error fetching runs:', error);
              return [];
            }
          }
          
          // Function to fetch latest artifacts
          async function fetchLatestArtifacts() {
            try {
              const response = await fetch(GITHUB_API_BASE + '/actions/artifacts?per_page=10');
              const data = await response.json();
              return data.artifacts.filter(a => a.name === 'performance-comparison');
            } catch (error) {
              console.error('Error fetching artifacts:', error);
              return [];
            }
          }
          
          // Update the real-time data function
          window.fetchLatestResults = async function() {
            const statusDiv = document.getElementById('cicdStatus');
            statusDiv.innerHTML = '<div style=\"text-align: center; padding: 20px;\">üîÑ Fetching latest CI/CD results...</div>';
            
            try {
              const runs = await fetchLatestRuns();
              const artifacts = await fetchLatestArtifacts();
              
              if (runs.length > 0) {
                const latestRun = runs[0];
                const status = latestRun.conclusion || latestRun.status;
                const statusIcon = status === 'success' ? '‚úÖ' : status === 'failure' ? '‚ùå' : 'üîÑ';
                
                statusDiv.innerHTML = \`
                  <div style=\"background: \${status === 'success' ? '#d4edda' : '#f8d7da'}; border: 1px solid \${status === 'success' ? '#c3e6cb' : '#f5c6cb'}; border-radius: 8px; padding: 20px; margin: 20px 0;\">
                    <h4 style=\"color: \${status === 'success' ? '#155724' : '#721c24'}; margin-bottom: 15px;\">\${statusIcon} Latest CI/CD Results</h4>
                    <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;\">
                      <div>
                        <strong>Status:</strong><br>
                        <span style=\"color: \${status === 'success' ? '#28a745' : '#dc3545'};\">\${statusIcon} \${status}</span>
                      </div>
                      <div>
                        <strong>Run #:</strong><br>
                        <a href=\"\${latestRun.html_url}\" target=\"_blank\">\${latestRun.run_number}</a>
                      </div>
                      <div>
                        <strong>Triggered by:</strong><br>
                        \${latestRun.actor.login}
                      </div>
                      <div>
                        <strong>Started:</strong><br>
                        \${new Date(latestRun.created_at).toLocaleString()}
                      </div>
                    </div>
                    <div style=\"margin-top: 15px; padding-top: 15px; border-top: 1px solid \${status === 'success' ? '#c3e6cb' : '#f5c6cb'};\">
                      <strong>üîó Quick Links:</strong>
                      <a href=\"\${latestRun.html_url}\" target=\"_blank\" style=\"margin: 0 10px;\">View Run</a>
                      \${artifacts.length > 0 ? \`<a href=\"\${artifacts[0].archive_download_url}\" target=\"_blank\" style=\"margin: 0 10px;\">Download Report</a>\` : ''}
                      <a href=\"https://github.com/\${GITHUB_REPO}/actions\" target=\"_blank\" style=\"margin: 0 10px;\">All Runs</a>
                    </div>
                  </div>
                \`;
              } else {
                statusDiv.innerHTML = '<div style=\"padding: 20px; text-align: center;\">No recent runs found</div>';
              }
              
              updateTimestamp();
              
            } catch (error) {
              statusDiv.innerHTML = \`
                <div style=\"background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px; padding: 20px;\">
                  <strong>‚ö†Ô∏è Error fetching data:</strong> \${error.message}<br>
                  <small>Note: GitHub API has rate limits for unauthenticated requests</small>
                </div>
              \`;
            }
          };
        </script>
        \`;
        
        // Insert the script before the closing body tag
        html = html.replace('</body>', apiScript + '</body>');
        
        fs.writeFileSync('docs/index.html', html);
        "
        
        # Create a robots.txt for better SEO
        cat > docs/robots.txt << 'EOF'
        User-agent: *
        Allow: /
        
        Sitemap: https://kardebkar.github.io/System-Design-Practice/sitemap.xml
        EOF
        
        # Create a simple sitemap
        cat > docs/sitemap.xml << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
          <url>
            <loc>https://kardebkar.github.io/System-Design-Practice/</loc>
            <lastmod>2025-08-03</lastmod>
            <priority>1.0</priority>
          </url>
        </urlset>
        EOF
        
        echo "‚úÖ GitHub Pages site created in docs/ directory"
        ls -la docs/
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_RUN_ID: ${{ github.run_id }}
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Update README with live links
      run: |
        # Add GitHub Pages URL to README
        PAGES_URL="https://${{ github.repository_owner }}.github.io/System-Design-Practice"
        echo "üìä **Live Dashboard:** $PAGES_URL" >> README.md
        echo "üîó **Latest CI/CD Run:** https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> README.md
        
    - name: Comment on PR with live links
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const pagesUrl = `https://${{ github.repository_owner }}.github.io/System-Design-Practice`;
          const runUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üöÄ Dashboard Deployed Successfully!
            
**üìä Live Dashboard:** ${pagesUrl}
**üîó This CI/CD Run:** ${runUrl}
**üìà All Runs:** https://github.com/${{ github.repository }}/actions

The performance dashboard has been deployed to GitHub Pages with real-time CI/CD integration!`
          });